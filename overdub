var widget = document.querySelector('#demo-widget');
var sample = document.querySelector('#demo-sample');
var hint = document.querySelector('#demo-hint');
var audio = document.querySelector('#demo-audio');
window.onload = generateSamples();

function selectSample(event) {
    for (i = 1; i <= 3; i++) {
        sample.classList.remove('sample_man-' + i);
        sample.classList.remove('sample_woman-' + i);
    }
    sample.classList.add('sample_' + event.target.value);
    restoreSamples();
}

function inputChange(event) {
    var input = event.target;
    widget.classList.contains('widget_generated') && setStatus('ready');
    if (sample.classList.contains('sample_default') && !widget.classList.contains('widget_error')) {
        sample.classList.remove('sample_default');
        sample.classList.add('sample_modified');
    }
    if (input.value.length < 1) {
        input.style.width = '0';
        return;
    }
    var clone = document.createElement('pre');
    clone.classList.add('pre-input');
    clone.innerHTML = input.value;
    widget.appendChild(clone);
    input.style.width = clone.offsetWidth + 'px';
    widget.removeChild(clone);
    if (input.style.width !== '' && input.style.minWidth === '') {
        input.style.minWidth = input.style.width;
    }
}

function restoreSamples() {
    var inputEvent = document.createEvent('Event');
    var inputs = document.querySelectorAll('.sample__input');
    var currentSample = sample.className.match(/_\w*-\d/)[0].slice(1);
    inputEvent.initEvent('input', false, false);
    for (i = 0; i < inputs.length; i++) {
        inputs[i].value = inputs[i].dataset.value;
        inputs[i].dispatchEvent(inputEvent);
        inputs[i].nextElementSibling.dataset.original = '';
    }
    hint.innerHTML = 'Click into the outlined section to type a correction.';
    sample.classList.remove('sample_modified');
    sample.classList.add('sample_default');
    if (widget.classList.contains('widget_generated') || widget.classList.contains('widget_generating')) {
        setStatus('ready');
    }
    loadAudio(document.querySelector('.sample__text_' + currentSample).dataset.audio, false);
}

function generateSamples() {
    setStatus('generating');
    var get = new XMLHttpRequest();
    get.withCredentials = true;
    get.open('GET', 'https://public.lyrebird.ai/api/public/sentences', true);
    get.responseType = 'json';
    get.send();
    get.onload = function () {
        var select = sample.firstElementChild;
        var response = get.response;
        if (typeof response === "string") {
            // specially for chrome on win
            response = JSON.parse(response);
            // specially for ie
        }
        response.forEach(function (item) {
            var text = item.text.split(item.text_to_change).map(function (part) {
                if (part !== '') {
                    return part.trim();
                }
            });
            sample.appendChild(createSample({
                speaker: item.speaker,
                text: text,
                text_to_change: item.text_to_change,
                sample_id: item.id,
                audio_url: item.audio_url,
            }));
            select.appendChild(createOption(item.speaker));
            if (item.id === 0) {
                sample.classList.add('sample_' + item.speaker.replace(' ', '-'));
                loadAudio(item.audio_url, false);
            }
        });
        restoreSamples();
        setStatus('ready');
    }
}

function createSample(sampleObject) {
    var input = document.createElement('input');
    input.classList.add('sample__input');
    input.addEventListener('input', inputChange);
    input.addEventListener('focus', focusOnInput);
    input.addEventListener('blur', blurOnInput);
    input.type = 'text';
    input.maxLength = 30;
    input.setAttribute('data-value', sampleObject.text_to_change);
    var sampleText = document.createElement('div');
    sampleText.classList.add('sample__text');
    sampleText.classList.add('sample__text_' + sampleObject.speaker.replace(' ', '-'));
    sampleText.setAttribute('data-sample', sampleObject.sample_id);
    sampleText.setAttribute('data-audio', sampleObject.audio_url);
    sampleText.insertAdjacentText('beforeend', sampleObject.text[0]);
    sampleText.appendChild(input);
    var originalText = document.createElement('span');
    originalText.classList.add('sample__original');
    originalText.setAttribute('data-original', '');
    sampleText.appendChild(originalText);
    sampleObject.text[1] !== undefined && sampleText.insertAdjacentText('beforeend', sampleObject.text[1]);
    return sampleText;
}

function createOption(optionText) {
    var option = document.createElement('option');
    option.value = optionText.replace(' ', '-');
    if (optionText.match(/woman\s/)) {
        option.insertAdjacentText('beforeend', optionText.replace(/\bwoman\s/, 'Female Sample #'));
    } else if (optionText.match(/\bman\s/)) {
        option.insertAdjacentText('beforeend', optionText.replace(/\bman\s/, 'Male Sample #'));
    }
    return option;
}

function setStatus(status) {
    widget.classList.remove('widget_generating');
    widget.classList.remove('widget_generated');
    widget.classList.remove('widget_playing');
    widget.classList.remove('widget_error');
    widget.classList.remove('widget_ready');
    typeof status === 'string' && widget.classList.add('widget_' + status);
}

function handleButtonClick(event) {
    if (event.button !== 0 || widget.classList.contains('widget_generating') || widget.classList.contains('widget_error')) {
        return;
    }
    if (widget.classList.contains('widget_playing')) {
        audio.pause();
        return;
    } else if (widget.classList.contains('widget_generated') || (widget.classList.contains('widget_ready') && sample.classList.contains('sample_default'))) {
        audio.play();
        return;
    }
    audio.pause();
    var sampleName = sample.className.match(/_\w*-\d/)[0].slice(1);
    var currentSample = document.querySelector('.sample__text_' + sampleName);
    var id = parseInt(currentSample.dataset.sample);
    var text = currentSample.firstElementChild.value;
    requestAudio(id, text);
}

function requestAudio(id, text) {
    setStatus('generating');
    var post = new XMLHttpRequest();
    post.withCredentials = true;
    post.open('POST', 'https://public.lyrebird.ai/api/public/imputation', true);
    post.responseType = 'json';
    post.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    post.send(JSON.stringify({
        id: id,
        text: text
    }));
    post.onload = function () {
        if (!widget.classList.contains('widget_generating')) {
            return;
        }
        var response = post.response;
        if (typeof response === "string") {
            response = JSON.parse(response);
        }
        if (response.audio_url !== undefined) {
            loadAudio(response.audio_url, true);
            // setStatus('generated');
        } else {
            console.error('Error while fetching URL of audio: ' + response);
            setStatus();
        }
    }
}

function loadAudio(src, play) {
    if (widget.classList.contains('widget_playing')) {
        sample.classList.contains('sample_default') ? setStatus('ready') : setStatus('generated');
    }
    var source = document.createElement('SOURCE');
    var types = {
        mp3: 'mpeg',
        ogg: 'ogg',
        wav: 'wav'
    };
    var type = types[src.match(/\w*\d*$/i)[0]];
    if (type === undefined) {
        return;
    }
    source.type = 'audio/' + type;
    source.src = src;
    audio.innerHTML = '';
    audio.appendChild(source);
    audio.load();
    play && audio.play();
}

function stopAudio() {
    audio.currentTime = 0;
    sample.classList.contains('sample_default') ? setStatus('ready') : setStatus('generated');
}

function errorAudio() {
    hint.innerHTML = 'Your browser isnâ€™t supported.';
    setStatus('error');
}

function focusOnInput(event) {
    var input = event.target;
    var original = input.nextElementSibling;
    hint.innerHTML = 'Type whatever you want.';
    if (sample.classList.contains('sample_modified')) {
        return;
    }
    original.dataset.original = input.dataset.value;
    input.value = '';
}

function blurOnInput(event) {
    var input = event.target;
    var original = input.nextElementSibling;
    hint.innerHTML = 'Click into the outlined section to type a correction.';
    if (sample.classList.contains('sample_modified')) {
        return;
    }
    input.value = input.dataset.value;
    original.dataset.original = '';
}

// Show notification on url parameter
if (document.location.href.indexOf('lyrebird=true') > 0) {
    $(".top-notification").show();
}
